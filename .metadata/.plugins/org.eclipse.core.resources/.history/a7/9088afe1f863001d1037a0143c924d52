package com.nvd.example.controller;

import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.Link;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriInfo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.nvd.example.model.Article;
import com.nvd.example.service.ArticleService;

@RestController
@RequestMapping("/articles")
public class ArticleController {

	@Autowired
	private ArticleService articleService;

	@GetMapping("/{id}")
	public Response getArticles(@PathVariable("id") Integer id, @Context UriInfo uriInfo) {
		Article article = articleService.getArticle(id);
		Link seftLink = Link.fromUri(uriInfo.getAbsolutePath()).rel("self").type("GET").build();
		Link commentLink = Link
				.fromUriBuilder(uriInfo.getAbsolutePathBuilder().path(article.getId().toString()).path("comments"))
				.rel("comments").type("GET").build();
		Link tagLink = Link
				.fromUriBuilder(uriInfo.getAbsolutePathBuilder().path(article.getId().toString()).path("tags"))
				.rel("tags").type("GET").build();
		article.setSelf(seftLink);
		return Response.ok(article).links(seftLink, commentLink, tagLink).build();
	}

	@GetMapping("/")
	public Response getArticles(@Context UriInfo uriInfo) {
		Link selfLink = Link.fromUri(uriInfo.getAbsolutePath()).rel("self").type("GET").build();

		// http://localhost:8080/RestfulWebServiceExample/rest/articles?page=2
		Link nextLink = Link.fromUriBuilder(uriInfo.getAbsolutePathBuilder().queryParam("page", "2")).rel("next")
				.type("GET").build();

		// http://localhost:8080/RestfulWebServiceExample/rest/articles?page=0
		Link prevLink = Link.fromUriBuilder(uriInfo.getAbsolutePathBuilder().queryParam("page", "0")).rel("prev")
				.type("GET").build();
	}

	@GetMapping
	@Path("?page={page}")
	public Response getArticles(@QueryParam("page") int page) {
		return null;
	}

	@GetMapping
	@Path("/{id}/comments")
	public Response getComments(@PathParam("id") int id) {
		return null;
	}

	@GetMapping
	@Path("/{id}/tags")
	public Response getTags(@PathParam("id") int id) {
		return null;
	}
}
