package com.nvd.training.academe.test;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class Excersice2 {

	/*
	 * Requirement: Cho một mảng các số nguyên A theo thứ tự và có thể trùng lặp như
	 * bên dưới. Trong một lần di chuyển, bạn có thể xóa một số nguyên khỏi A hoặc
	 * chèn một số nguyên vào trước hoặc sau bất kỳ phần tử nào của A. Mục tiêu là
	 * đạt được một mảng trong đó tất cả các phần tử giá trị X có trong mảng xuất
	 * hiện chính xác X lần
	 */

	/*
	 * Analyze: 1. Sort mảng 2. Duyệt mảng đến vị trí length - 1 3. Kiểm tra và bỏ
	 * qua các phần tử < 0 4. Kiểm tra phần tử vị trí i và (i + 1) Nếu phần tử (i +
	 * 1) khác phần tử i + 1 thì trả về phần tử i + 1 Nếu duyệt hết mảng -> trả về
	 * phần tử cuối cùng của mảng + 1
	 */

	public static int solution(int[] array) {
		Map<Integer, Integer> elementPresentMap = new HashMap<>();
		for (int i : array) {
			int value = 1;
			if (elementPresentMap.containsKey(i)) {
				value = elementPresentMap.get(i) + 1;
			}
			elementPresentMap.put(i, value);
		}
		System.out.println(elementPresentMap.toString());
		int result = 0;
		Set<Integer> keys = elementPresentMap.keySet();
		for (Integer key : keys) {
			Integer value = elementPresentMap.get(key);
			if (value > key) {
				result += value - key;
				System.out.println("1: v " + value + " k " + key + " r " + result);
			} else if (value < key) {
				if (key - value > key / 2) {
					result += value;
					System.out.println("2: v " + value + " k " + key + " r " + result);
				} else {
					result += key - value;
					System.out.println("3: v " + value + " k " + key + " r " + result);
				}
			}
		}
		return result;
	}

	public static void main(String[] args) {
		int[] a = { 1, 1, 3, 4, 4, 4 };
		int[] b = { 1, 2, 2, 2, 5, 5, 5, 8 };
		System.out.println(solution(b));
	}
}
